{"version":3,"sources":["ServiceDB.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","ServiceDB","value","conectaDB","connection","openRequest","window","indexedDB","open","onupgradeneeded","e","console","log","minhaConnection","result","objectStoreNames","contains","deleteObjectStore","createObjectStore","autoIncrement","onsuccess","onerror","error","gravabanco","negociacao","transaction","store","objectStore","request","add","listaTodos","cursor","openCursor","negociacoes","atual","dado","push","Negociacao","_data","_quantidade","_valor","continue","name"],"mappings":"AAAA;;AAEA,IAAIA,eAAe,YAAY;AAAE,aAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AAAE,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,MAAME,MAA1B,EAAkCD,GAAlC,EAAuC;AAAE,gBAAIE,aAAaH,MAAMC,CAAN,CAAjB,CAA2BE,WAAWC,UAAX,GAAwBD,WAAWC,UAAX,IAAyB,KAAjD,CAAwDD,WAAWE,YAAX,GAA0B,IAA1B,CAAgC,IAAI,WAAWF,UAAf,EAA2BA,WAAWG,QAAX,GAAsB,IAAtB,CAA4BC,OAAOC,cAAP,CAAsBT,MAAtB,EAA8BI,WAAWM,GAAzC,EAA8CN,UAA9C;AAA4D;AAAE,KAAC,OAAO,UAAUO,WAAV,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgD;AAAE,YAAID,UAAJ,EAAgBb,iBAAiBY,YAAYG,SAA7B,EAAwCF,UAAxC,EAAqD,IAAIC,WAAJ,EAAiBd,iBAAiBY,WAAjB,EAA8BE,WAA9B,EAA4C,OAAOF,WAAP;AAAqB,KAAhN;AAAmN,CAA9hB,EAAnB;;AAEA,SAASI,eAAT,CAAyBC,QAAzB,EAAmCL,WAAnC,EAAgD;AAAE,QAAI,EAAEK,oBAAoBL,WAAtB,CAAJ,EAAwC;AAAE,cAAM,IAAIM,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,YAAY,YAAY;AACxB,aAASA,SAAT,GAAqB;AACjBH,wBAAgB,IAAhB,EAAsBG,SAAtB;AACH;;AAEDpB,iBAAaoB,SAAb,EAAwB,CAAC;AACrBR,aAAK,WADgB;AAErBS,eAAO,SAASC,SAAT,GAAqB;;AAExB,gBAAIC,UAAJ;AACA,gBAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsB,YAAtB,EAAoC,CAApC,CAAlB;;AAEAH,wBAAYI,eAAZ,GAA8B,UAAUC,CAAV,EAAa;AACvCC,wBAAQC,GAAR,CAAY,sCAAZ;AACA,oBAAIC,kBAAkBH,EAAE3B,MAAF,CAAS+B,MAA/B;AACA,oBAAID,gBAAgBE,gBAAhB,CAAiCC,QAAjC,CAA0C,aAA1C,CAAJ,EAA8D;AAC1DH,oCAAgBI,iBAAhB,CAAkC,aAAlC;AACH;AACDJ,gCAAgBK,iBAAhB,CAAkC,aAAlC,EAAiD,EAAEC,eAAe,IAAjB,EAAjD;AACH,aAPD;;AASAd,wBAAYe,SAAZ,GAAwB,UAAUV,CAAV,EAAa;AACjCC,wBAAQC,GAAR,CAAY,4BAAZ;AACAR,6BAAaM,EAAE3B,MAAF,CAAS+B,MAAtB;AACH,aAHD;;AAKAT,wBAAYgB,OAAZ,GAAsB,UAAUX,CAAV,EAAa;AAC/BC,wBAAQC,GAAR,CAAYF,EAAE3B,MAAF,CAASuC,KAArB;AACH,aAFD;AAGH;AAxBoB,KAAD,EAyBrB;AACC7B,aAAK,YADN;AAECS,eAAO,SAASqB,UAAT,CAAoBC,UAApB,EAAgC;;AAEnC,gBAAIpB,UAAJ;AACA,gBAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsB,YAAtB,EAAoC,CAApC,CAAlB;;AAEAH,wBAAYI,eAAZ,GAA8B,UAAUC,CAAV,EAAa;AACvCC,wBAAQC,GAAR,CAAY,sCAAZ;AACA,oBAAIC,kBAAkBH,EAAE3B,MAAF,CAAS+B,MAA/B;AACA,oBAAID,gBAAgBE,gBAAhB,CAAiCC,QAAjC,CAA0C,aAA1C,CAAJ,EAA8D;AAC1DH,oCAAgBI,iBAAhB,CAAkC,aAAlC;AACH;AACDJ,gCAAgBK,iBAAhB,CAAkC,aAAlC,EAAiD,EAAEC,eAAe,IAAjB,EAAjD;AACH,aAPD;;AASAd,wBAAYe,SAAZ,GAAwB,UAAUV,CAAV,EAAa;AACjCC,wBAAQC,GAAR,CAAY,4BAAZ;AACAR,6BAAaM,EAAE3B,MAAF,CAAS+B,MAAtB;AACH,aAHD;;AAKAT,wBAAYgB,OAAZ,GAAsB,UAAUX,CAAV,EAAa;AAC/BC,wBAAQC,GAAR,CAAYF,EAAE3B,MAAF,CAASuC,KAArB;AACH,aAFD;;AAIA,gBAAIG,cAAcrB,WAAWqB,WAAX,CAAuB,CAAC,aAAD,CAAvB,EAAwC,WAAxC,CAAlB;AACA,gBAAIC,QAAQD,YAAYE,WAAZ,CAAwB,aAAxB,CAAZ;AACA,gBAAIC,UAAUF,MAAMG,GAAN,CAAUL,UAAV,CAAd;AACAI,oBAAQR,SAAR,GAAoB,UAAUV,CAAV,EAAa;AAC7BC,wBAAQC,GAAR,CAAY,iCAAZ;AACH,aAFD;AAGAgB,oBAAQP,OAAR,GAAkB,UAAUX,CAAV,EAAa;AAC3BC,wBAAQC,GAAR,CAAY,uCAAZ;AACH,aAFD;AAGH;AAlCF,KAzBqB,EA4DrB;AACCnB,aAAK,YADN;AAECS,eAAO,SAAS4B,UAAT,GAAsB;AACzB,gBAAIL,cAAcrB,WAAWqB,WAAX,CAAuB,CAAC,aAAD,CAAvB,EAAwC,WAAxC,CAAlB;AACA,gBAAIC,QAAQD,YAAYE,WAAZ,CAAwB,aAAxB,CAAZ;AACA,gBAAII,SAASL,MAAMM,UAAN,EAAb;AACA,gBAAIC,cAAc,EAAlB;AACAF,mBAAOX,SAAP,GAAmB,UAAUV,CAAV,EAAa;AAC5B,oBAAIwB,QAAQxB,EAAE3B,MAAF,CAAS+B,MAArB;AACA,oBAAIoB,KAAJ,EAAW;AACP,wBAAIC,OAAOD,MAAMhC,KAAjB;AACA+B,gCAAYG,IAAZ,CAAiB,IAAIC,UAAJ,CAAeF,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAN,0BAAMO,QAAN;AACH,iBAJD,MAIO;AACH9B,4BAAQC,GAAR,CAAYqB,WAAZ;AACH;AACJ,aATD;AAUAF,mBAAOV,OAAP,GAAiB,UAAUX,CAAV,EAAa;AAC1BC,wBAAQC,GAAR,CAAYF,EAAE3B,MAAF,CAASuC,KAAT,CAAeoB,IAA3B;AACH,aAFD;AAGH;AApBF,KA5DqB,CAAxB;;AAmFA,WAAOzC,SAAP;AACH,CAzFe,EAAhB","file":"ServiceDB.js","sourcesContent":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ServiceDB = function () {\n    function ServiceDB() {\n        _classCallCheck(this, ServiceDB);\n    }\n\n    _createClass(ServiceDB, [{\n        key: \"conectaDB\",\n        value: function conectaDB() {\n\n            var connection;\n            var openRequest = window.indexedDB.open(\"aluraframe\", 4);\n\n            openRequest.onupgradeneeded = function (e) {\n                console.log(\"Cria ou altera um banco já existente\");\n                var minhaConnection = e.target.result;\n                if (minhaConnection.objectStoreNames.contains(\"negociacoes\")) {\n                    minhaConnection.deleteObjectStore(\"negociacoes\");\n                }\n                minhaConnection.createObjectStore(\"negociacoes\", { autoIncrement: true });\n            };\n\n            openRequest.onsuccess = function (e) {\n                console.log(\"Conexão obtida com sucesso\");\n                connection = e.target.result;\n            };\n\n            openRequest.onerror = function (e) {\n                console.log(e.target.error);\n            };\n        }\n    }, {\n        key: \"gravabanco\",\n        value: function gravabanco(negociacao) {\n\n            var connection;\n            var openRequest = window.indexedDB.open(\"aluraframe\", 4);\n\n            openRequest.onupgradeneeded = function (e) {\n                console.log(\"Cria ou altera um banco já existente\");\n                var minhaConnection = e.target.result;\n                if (minhaConnection.objectStoreNames.contains(\"negociacoes\")) {\n                    minhaConnection.deleteObjectStore(\"negociacoes\");\n                }\n                minhaConnection.createObjectStore(\"negociacoes\", { autoIncrement: true });\n            };\n\n            openRequest.onsuccess = function (e) {\n                console.log(\"Conexão obtida com sucesso\");\n                connection = e.target.result;\n            };\n\n            openRequest.onerror = function (e) {\n                console.log(e.target.error);\n            };\n\n            var transaction = connection.transaction([\"negociacoes\"], \"readwrite\");\n            var store = transaction.objectStore(\"negociacoes\");\n            var request = store.add(negociacao);\n            request.onsuccess = function (e) {\n                console.log(\"Negociação incluida com sucesso\");\n            };\n            request.onerror = function (e) {\n                console.log(\"Não foi possível incluir a negociação\");\n            };\n        }\n    }, {\n        key: \"listaTodos\",\n        value: function listaTodos() {\n            var transaction = connection.transaction([\"negociacoes\"], \"readwrite\");\n            var store = transaction.objectStore(\"negociacoes\");\n            var cursor = store.openCursor();\n            var negociacoes = [];\n            cursor.onsuccess = function (e) {\n                var atual = e.target.result;\n                if (atual) {\n                    var dado = atual.value;\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n                    atual.continue();\n                } else {\n                    console.log(negociacoes);\n                }\n            };\n            cursor.onerror = function (e) {\n                console.log(e.target.error.name);\n            };\n        }\n    }]);\n\n    return ServiceDB;\n}();"]}